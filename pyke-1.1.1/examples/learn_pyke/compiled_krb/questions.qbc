(S'1.1.1'
p1
I1
t.ccopy_reg
_reconstructor
p1
(cpyke.question_base
question_base
p2
c__builtin__
object
p3
NtRp4
(dp5
S'initialized'
p6
I00
sS'entity_lists'
p7
(dp8
S'tuple_pattern_syntax'
p9
g1
(cpyke.question_base
question
p10
g3
NtRp11
(dp12
S'name'
p13
g9
sS'input_param_positions'
p14
(tsS'cache'
p15
(dp16
sS'answer_param_position'
p17
I0
sS'params'
p18
(S'ans'
tp19
sS'user_question'
p20
g1
(cpyke.user_question
select_1
p21
g3
NtRp22
(dp23
S'question_base'
p24
g4
sS'review'
p25
((I1
g1
(cstring
Template
p26
g3
NtRp27
(dp28
S'template'
p29
VIncorrect: a tuple pattern is a series of patterns enclosed in parenthesis.
p30
sbt(I2
g1
(g26
g3
NtRp31
(dp32
g29
VCorrect!
p33
sbttp34
sS'match'
p35
((I1
g1
(g26
g3
NtRp36
(dp37
g29
VA series of patterns enclosed in "tuple(" ... ")".
p38
sbt(I2
g1
(g26
g3
NtRp39
(dp40
g29
VA series of patterns enclosed in parenthesis.
p41
sbttp42
sS'format'
p43
g1
(g26
g3
NtRp44
(dp45
g29
VWhat is the syntax for a tuple pattern?
p46
sbsbsS'answer_param'
p47
S'ans'
p48
sS'knowledge_base'
p49
g4
sbsS'same_var_different_rules'
p50
g1
(g10
g3
NtRp51
(dp52
g13
g50
sg14
(tsg15
(dp53
sg17
I0
sg18
(S'ans'
tp54
sg20
g1
(cpyke.user_question
yn
p55
g3
NtRp56
(dp57
g24
g4
sg25
((I01
g1
(g26
g3
NtRp58
(dp59
g29
VCorrect!  The $$a in Pattern 1 is in a different rule than\u000a          the $$a in Pattern 2, so they are not required\u000a          to match the same value.
p60
sbt(I00
g1
(g26
g3
NtRp61
(dp62
g29
VIncorrect: The $$a in Pattern 1 is in a different rule than\u000a           the $$a in Pattern 2, so they are not required\u000a           to match the same value.
p63
sbttp64
sg43
g1
(g26
g3
NtRp65
(dp66
g29
VAssume that the following two patterns are in different rules:\u000a\u000a  Pattern 1: ($$a, 2)\u000a  Pattern 2: (1, $$a)\u000a\u000aDo these patterns match?
p67
sbsbsg47
S'ans'
p68
sg49
g4
sbsS'pat_var_syntax'
p69
g1
(g10
g3
NtRp70
(dp71
g13
g69
sg14
(tsg15
(dp72
sg17
I0
sg18
(S'ans'
tp73
sg20
g1
(g21
g3
NtRp74
(dp75
g24
g4
sg25
((I1
g1
(g26
g3
NtRp76
(dp77
g29
VIncorrect: A legal identifier not within quotes is treated the same\u000a           as if it were in quotes.  This just saves you the trouble of typing\u000a           the quotes.\u000a           A pattern variable is any identifier preceded by a '$$'.
p78
sbt(I2
g1
(g26
g3
NtRp79
(dp80
g29
VCorrect: Pattern variables are preceded by a '$$'.
p81
sbt(I3
g1
(g26
g3
NtRp82
(dp83
g29
VIncorrect: Pattern variables must be preceded by a '$$'.
p84
sbttp85
sg35
((I1
g1
(g26
g3
NtRp86
(dp87
g29
Vany legal identifier not within quotes is a pattern variable
p88
sbt(I2
g1
(g26
g3
NtRp89
(dp90
g29
Va '$$' in front of any legal identifier
p91
sbt(I3
g1
(g26
g3
NtRp92
(dp93
g29
Va '*' in front of any legal identifier
p94
sbttp95
sg43
g1
(g26
g3
NtRp96
(dp97
g29
VA pattern variable matches any value (including other pattern variables).\u000aWhat is the syntax for a pattern variable?
p98
sbsbsg47
S'ans'
p99
sg49
g4
sbsS'rest_match'
p100
g1
(g10
g3
NtRp101
(dp102
g13
g100
sg14
(tsg15
(dp103
sg17
I0
sg18
(S'ans'
tp104
sg20
g1
(g21
g3
NtRp105
(dp106
g24
g4
sg25
((I1
g1
(g26
g3
NtRp107
(dp108
g29
VIncorrect: a "rest" pattern variable is always set to a tuple.
p109
sbt(I2
g1
(g26
g3
NtRp110
(dp111
g29
VCorrect!  (Note that a comma is not required for singleton tuples in PyKE).
p112
sbt(I3
g1
(g26
g3
NtRp113
(dp114
g29
VCorrect, but answer 2 is slightly better because a comma is not required for\u000a         singleton tuples in pyke.
p115
sbt(I4
g1
(g26
g3
NtRp116
(dp117
g29
VIncorrect: these two patterns do match!
p118
sbt(I5
g1
(g26
g3
NtRp119
(dp120
g29
VIncorrect: pattern 1 is a legal pattern.
p121
sbttp122
sg35
((I1
g1
(g26
g3
NtRp123
(dp124
g29
V3
sbt(I2
g1
(g26
g3
NtRp125
(dp126
g29
V(3)
p127
sbt(I3
g1
(g26
g3
NtRp128
(dp129
g29
V(3,)
p130
sbt(I4
g1
(g26
g3
NtRp131
(dp132
g29
Vnothing, the two patterns don't match
p133
sbt(I5
g1
(g26
g3
NtRp134
(dp135
g29
Vnothing, pattern 1 is not a legal pattern
p136
sbttp137
sg43
g1
(g26
g3
NtRp138
(dp139
g29
VAfter matching the following two patterns, what is $$c set to?\u000a\u000apattern 1: ($$a, $$b, *$$c)\u000apattern 2: (1, 2, 3)
p140
sbsbsg47
S'ans'
p141
sg49
g4
sbsS'pat_master'
p142
g1
(g10
g3
NtRp143
(dp144
g13
g142
sg14
(tsg15
(dp145
sg17
I0
sg18
(S'ans'
tp146
sg20
g1
(g21
g3
NtRp147
(dp148
g24
g4
sg25
((I1
g1
(g26
g3
NtRp149
(dp150
g29
VIncorrect: Neither of the symbols 'a' nor 'b' appear in either pattern.
p151
sbt((I2
I7
I8
tg1
(g26
g3
NtRp152
(dp153
g29
VIncorrect: Pattern variable '$$a' is bound to a value.
p154
sbt(I3
g1
(g26
g3
NtRp155
(dp156
g29
VIncorrect: $$x is bound to a tuple.
p157
sbt(I4
g1
(g26
g3
NtRp158
(dp159
g29
VIncorrect: Both pattern variables '$$a' and '$$b' are bound to values.
p160
sbt(I5
g1
(g26
g3
NtRp161
(dp162
g29
VIncorrect: Pattern variable '$$b' is bound to a value.
p163
sbt((I6
I9
tg1
(g26
g3
NtRp164
(dp165
g29
VIncorrect: The '*' is part of the pattern syntax and is not seen in the\u000a           bound value.
p166
sbt(I10
g1
(g26
g3
NtRp167
(dp168
g29
VIncorrect: The '*' in '*$$b' means "the rest of the tuple" is '$$b'.
p169
sbt((I11
I12
tg1
(g26
g3
NtRp170
(dp171
g29
VIncorrect: The '$$a' in pattern 1 is a different pattern variable than\u000a           the '$$a' in pattern 2.
p172
sbt(I13
g1
(g26
g3
NtRp173
(dp174
g29
VCorrect!\u000a    matching Pattern 1: (ho, $$_, ($$a, $$a))\u000a          to Pattern 2: $$a\u000a       binds Pattern 2: $$a to Pattern 1: (ho, $$_, (ho, ho))\u000a    matching Pattern 1: ($$a, $$a, $$b)\u000a          to Pattern 2: $$a, which is bound to Pattern 1: (ho, $$_, ($$a, $$a))\u000a       binds Pattern 1: $$a to ho,\u000a         and Pattern 1: $$b to Pattern 1: ($$a, $$a) which expands to (ho, ho)\u000a    matching Pattern 1: ($$a, *$$b)\u000a          to Pattern 2: $$x\u000a       binds Pattern 2: $$x to Pattern 1: ($$a, *$$b) which expands to (ho, ho, ho)
p175
sbt(I14
g1
(g26
g3
NtRp176
(dp177
g29
VIncorrect: The patterns do match!
p178
sbt(I15
g1
(g26
g3
NtRp179
(dp180
g29
VIncorrect: Pattern 1 is a legal pattern.
p181
sbttp182
sg35
((I1
g1
(g26
g3
NtRp183
(dp184
g29
V(a, b)
p185
sbt(I2
g1
(g26
g3
NtRp186
(dp187
g29
V$$a
p188
sbt(I3
g1
(g26
g3
NtRp189
(dp190
g29
Vho
p191
sbt(I4
g1
(g26
g3
NtRp192
(dp193
g29
V($$a, *$$b)
p194
sbt(I5
g1
(g26
g3
NtRp195
(dp196
g29
V(ho, *$$b)
p197
sbt(I6
g1
(g26
g3
NtRp198
(dp199
g29
V(ho, *($$a, $$a))
p200
sbt(I7
g1
(g26
g3
NtRp201
(dp202
g29
V(ho, ($$a, $$a))
p203
sbt(I8
g1
(g26
g3
NtRp204
(dp205
g29
V(ho, $$a, $$a)
p206
sbt(I9
g1
(g26
g3
NtRp207
(dp208
g29
V(ho, *(ho, ho))
p209
sbt(I10
g1
(g26
g3
NtRp210
(dp211
g29
V(ho, (ho, ho))
p212
sbt(I11
g1
(g26
g3
NtRp213
(dp214
g29
V(ho, $$_, (ho, ho))
p215
sbt(I12
g1
(g26
g3
NtRp216
(dp217
g29
V(ho, ho, (ho, ho))
p218
sbt(I13
g1
(g26
g3
NtRp219
(dp220
g29
V(ho, ho, ho)
p221
sbt(I14
g1
(g26
g3
NtRp222
(dp223
g29
Vnothing, the two patterns don't match
p224
sbt(I15
g1
(g26
g3
NtRp225
(dp226
g29
Vnothing, pattern 1 is not a legal pattern
p227
sbt(I16
g1
(g26
g3
NtRp228
(dp229
g29
VI don't have a clue...
p230
sbttp231
sg43
g1
(g26
g3
NtRp232
(dp233
g29
VAssume that the following two patterns are contained in different rules\u000aand that none of the pattern variables are initially bound to values:\u000a\u000apattern 1: ((ho, $$_, ($$a, $$a)), ($$a, $$a, $$b), ($$a, *$$b))\u000apattern 2: ($$a, $$a, $$x)\u000a\u000aIf the two patterns are matched together, what will $$x be bound to?
p234
sbsbsg47
S'ans'
p235
sg49
g4
sbsS'generic_yn'
p236
g1
(g10
g3
NtRp237
(dp238
g13
g236
sg14
(I0
tp239
sg15
(dp240
sg17
I1
sg18
(S'question'
S'ans'
tp241
sg20
g1
(g55
g3
NtRp242
(dp243
g24
g4
sg25
Nsg43
g1
(g26
g3
NtRp244
(dp245
g29
V$question?
p246
sbsbsg47
S'ans'
p247
sg49
g4
sbsS'anonymous_syntax'
p248
g1
(g10
g3
NtRp249
(dp250
g13
g248
sg14
(tsg15
(dp251
sg17
I0
sg18
(S'ans'
tp252
sg20
g1
(g21
g3
NtRp253
(dp254
g24
g4
sg25
(((I1
I2
tg1
(g26
g3
NtRp255
(dp256
g29
VIncorrect: An anonymous pattern variable is any pattern variable\u000a           whose name starts with an underscore ('_').
p257
sbt(I3
g1
(g26
g3
NtRp258
(dp259
g29
VCorrect!
p260
sbttp261
sg35
((I1
g1
(g26
g3
NtRp262
(dp263
g29
V$$anonymous
p264
sbt(I2
g1
(g26
g3
NtRp265
(dp266
g29
V_anonymous
p267
sbt(I3
g1
(g26
g3
NtRp268
(dp269
g29
VUsing a pattern variable name that starts with an underscore ('_'),\u000alike: $$_anonymous.
p270
sbttp271
sg43
g1
(g26
g3
NtRp272
(dp273
g29
VAnonymous pattern variables act like "don't care" patterns.\u000aWhat is the syntax for an anonymous pattern variable?
p274
sbsbsg47
S'ans'
p275
sg49
g4
sbsS'pat_literal'
p276
g1
(g10
g3
NtRp277
(dp278
g13
g276
sg14
(tsg15
(dp279
sg17
I0
sg18
(S'ans'
tp280
sg20
g1
(g21
g3
NtRp281
(dp282
g24
g4
sg25
((I1
g1
(g26
g3
NtRp283
(dp284
g29
VIncorrect: Simple python values, like None, are pattern literals.
p285
sbt(I2
g1
(g26
g3
NtRp286
(dp287
g29
VIncorrect: Simple python values, like 33 and 3.14159, are pattern literals.
p288
sbt(I3
g1
(g26
g3
NtRp289
(dp290
g29
VIncorrect: Simple python values, like True and False, are pattern literals.
p291
sbt(I4
g1
(g26
g3
NtRp292
(dp293
g29
VIncorrect: Simple python values, like strings, are pattern literals.
p294
sbt(I5
g1
(g26
g3
NtRp295
(dp296
g29
VIncorrect: Legal identifiers are strings that don't require quotes\u000a           and are pattern literals just like quoted strings are.
p297
sbt(I6
g1
(g26
g3
NtRp298
(dp299
g29
VCorrect: Simple python values are pattern literals that only match themselves.
p300
sbttp301
sg35
((I1
g1
(g26
g3
NtRp302
(dp303
g29
VNone
p304
sbt(I2
g1
(g26
g3
NtRp305
(dp306
g29
V33
p307
sbt(I3
g1
(g26
g3
NtRp308
(dp309
g29
VTrue
p310
sbt(I4
g1
(g26
g3
NtRp311
(dp312
g29
V"hi mom!"
p313
sbt(I5
g1
(g26
g3
NtRp314
(dp315
g29
Vfred
p316
sbt(I6
g1
(g26
g3
NtRp317
(dp318
g29
V$$fred
p319
sbttp320
sg43
g1
(g26
g3
NtRp321
(dp322
g29
VPattern literals are patterns that only match a single constant value.\u000aWhich of these is NOT a pattern literal?
p323
sbsbsg47
S'ans'
p324
sg49
g4
sbsS'anonymous_matching'
p325
g1
(g10
g3
NtRp326
(dp327
g13
g325
sg14
(tsg15
(dp328
sg17
I0
sg18
(S'ans'
tp329
sg20
g1
(g21
g3
NtRp330
(dp331
g24
g4
sg25
(((I1
I2
tg1
(g26
g3
NtRp332
(dp333
g29
VIncorrect: a tuple pattern only matches another tuple.
p334
sbt(I3
g1
(g26
g3
NtRp335
(dp336
g29
VCorrect: pattern variable names that begin with an '_' are anonymous and\u000a         are not constrained to match the same value.\u000a         They serve as a "don't care" pattern and their name just\u000a         documents that value's function.
p337
sbt(I4
g1
(g26
g3
NtRp338
(dp339
g29
VIncorrect: a tuple pattern only matches another tuple of the same length.
p340
sbt(I5
g1
(g26
g3
NtRp341
(dp342
g29
VIncorrect: pattern variable names that begin with an '_' are anonymous and\u000a           are not constrained to match the same value.\u000a           They serve as a "don't care" pattern and their name just\u000a           documents that value's function.
p343
sbttp344
sg35
((I1
g1
(g26
g3
NtRp345
(dp346
g29
V44
p347
sbt(I2
g1
(g26
g3
NtRp348
(dp349
g29
Va
sbt(I3
g1
(g26
g3
NtRp350
(dp351
g29
V(a, b)
p352
sbt(I4
g1
(g26
g3
NtRp353
(dp354
g29
V(a, a, b)
p355
sbt(I5
g1
(g26
g3
NtRp356
(dp357
g29
Vnone of the above
p358
sbttp359
sg43
g1
(g26
g3
NtRp360
(dp361
g29
VWhat value matches the pattern: ($$_a, $$_a)?
p362
sbsbsg47
S'ans'
p363
sg49
g4
sbsS'pattern_scope'
p364
g1
(g10
g3
NtRp365
(dp366
g13
g364
sg14
(tsg15
(dp367
sg17
I0
sg18
(S'ans'
tp368
sg20
g1
(g21
g3
NtRp369
(dp370
g24
g4
sg25
((I1
g1
(g26
g3
NtRp371
(dp372
g29
VIncorrect: an identifier is treated as a string, and "a" does not match 44.
p373
sbt(I2
g1
(g26
g3
NtRp374
(dp375
g29
VIncorrect: both '$$a' pattern variables in pattern 1 must match the same value.
p376
sbt(I3
g1
(g26
g3
NtRp377
(dp378
g29
VCorrect: All of the pattern variables with the same name within the same rule\u000a         must always match the same value.\u000a         But pattern variables with the same name within different rules\u000a         may match different values.  Thus all of the $$a pattern variables\u000a         in Pattern 1 must match the same value, but this may be a different\u000a         value than the $$a in Pattern 2.
p379
sbt(I4
g1
(g26
g3
NtRp380
(dp381
g29
VIncorrect: All pattern variables with the same name in the same rule\u000a           must match the same value.\u000a           Here's the sequence of how these patterns are matched:\u000a           1. The first $$a in Pattern 1 is matched to the 1 in Pattern 2.\u000a              This sets the $$a in Pattern 1 to 1.\u000a           2. The second $$a in Pattern 1 is matched to the first $$b in\u000a              Pattern 2.  This sets $$b in Pattern 2 to 1, since that is what\u000a              $$a in Pattern 1 is set to.\u000a           3. The 3 in Pattern 1 is matched to the second $$b in Pattern 2.\u000a              This tries to match 3 to 1, since $$b in Pattern 2 is 1.\u000a              This is where the match fails!
p382
sbt(I5
g1
(g26
g3
NtRp383
(dp384
g29
VIncorrect: One set of patterns do match!
p385
sbttp386
sg35
((I1
g1
(g26
g3
NtRp387
(dp388
g29
VPattern 1: a\u000aPattern 2: 44
p389
sbt(I2
g1
(g26
g3
NtRp390
(dp391
g29
VPattern 1: ($$a, $$a, 3)\u000aPattern 2: (1, 2, 3)
p392
sbt(I3
g1
(g26
g3
NtRp393
(dp394
g29
VPattern 1: ($$a, $$a, 3)\u000aPattern 2: (1, 1, $$a)
p395
sbt(I4
g1
(g26
g3
NtRp396
(dp397
g29
VPattern 1: ($$a, $$a, 3)\u000aPattern 2: (1, $$b, $$b)
p398
sbt(I5
g1
(g26
g3
NtRp399
(dp400
g29
VNone of these match.
p401
sbt(I6
g1
(g26
g3
NtRp402
(dp403
g29
VI don't have a clue.
p404
sbttp405
sg43
g1
(g26
g3
NtRp406
(dp407
g29
VFor each answer, assume that the two patterns are contained in different rules.\u000aWhich set of patterns match each other?
p408
sbsbsg47
S'ans'
p409
sg49
g4
sbsS'multiple_matching'
p410
g1
(g10
g3
NtRp411
(dp412
g13
g410
sg14
(tsg15
(dp413
sg17
I0
sg18
(S'ans'
tp414
sg20
g1
(g21
g3
NtRp415
(dp416
g24
g4
sg25
(((I1
I2
tg1
(g26
g3
NtRp417
(dp418
g29
VIncorrect: A tuple pattern only matches another tuple.
p419
sbt(I3
g1
(g26
g3
NtRp420
(dp421
g29
VIncorrect: Both '$$a' pattern variables must match the same value.
p422
sbt(I4
g1
(g26
g3
NtRp423
(dp424
g29
VCorrect: Both '$$a' pattern variables must always match the same value,\u000a         in this case: b
p425
sbt(I5
g1
(g26
g3
NtRp426
(dp427
g29
VIncorrect: A tuple pattern only matches another tuple of the same length.
p428
sbttp429
sg35
((I1
g1
(g26
g3
NtRp430
(dp431
g29
V44
p432
sbt(I2
g1
(g26
g3
NtRp433
(dp434
g29
Va
sbt(I3
g1
(g26
g3
NtRp435
(dp436
g29
V(a, b)
p437
sbt(I4
g1
(g26
g3
NtRp438
(dp439
g29
V(b, b)
p440
sbt(I5
g1
(g26
g3
NtRp441
(dp442
g29
V(a, a, b)
p443
sbttp444
sg43
g1
(g26
g3
NtRp445
(dp446
g29
VWhat value matches the pattern: ($$a, $$a)?
p447
sbsbsg47
S'ans'
p448
sg49
g4
sbsS'knows_ai'
p449
g1
(g10
g3
NtRp450
(dp451
g13
g449
sg14
(tsg15
(dp452
sg17
I0
sg18
(S'ans'
tp453
sg20
g1
(g55
g3
NtRp454
(dp455
g24
g4
sg25
Nsg43
g1
(g26
g3
NtRp456
(dp457
g29
VDo you have some familiarity with artificial intelligence or expert systems?
p458
sbsbsg47
S'ans'
p459
sg49
g4
sbsS'rest_pattern_variable_syntax'
p460
g1
(g10
g3
NtRp461
(dp462
g13
g460
sg14
(tsg15
(dp463
sg17
I0
sg18
(S'ans'
tp464
sg20
g1
(g21
g3
NtRp465
(dp466
g24
g4
sg25
(((I1
I2
tg1
(g26
g3
NtRp467
(dp468
g29
VIncorrect: A "rest" pattern variable is any pattern variable preceded\u000a           by an asterisk ('*').
p469
sbt(I3
g1
(g26
g3
NtRp470
(dp471
g29
VCorrect!
p472
sbttp473
sg35
((I1
g1
(g26
g3
NtRp474
(dp475
g29
V$$rest
p476
sbt(I2
g1
(g26
g3
NtRp477
(dp478
g29
V_rest
p479
sbt(I3
g1
(g26
g3
NtRp480
(dp481
g29
VPreceding a pattern variable with an asterisk ('*'), like: *$$foo.
p482
sbttp483
sg43
g1
(g26
g3
NtRp484
(dp485
g29
V"Rest" pattern variables are used at the end of a tuple pattern to match the\u000arest of the tuple.\u000a\u000aWhat is the syntax for a "rest" pattern variable?
p486
sbsbsg47
S'ans'
p487
sg49
g4
sbsS'knows_prolog'
p488
g1
(g10
g3
NtRp489
(dp490
g13
g488
sg14
(tsg15
(dp491
sg17
I0
sg18
(S'ans'
tp492
sg20
g1
(g55
g3
NtRp493
(dp494
g24
g4
sg25
Nsg43
g1
(g26
g3
NtRp495
(dp496
g29
VDo you have some familiarity with the programming language prolog?
p497
sbsbsg47
S'ans'
p498
sg49
g4
sbssS'entity_list_type'
p499
Nsg13
S'questions'
p500
sb.